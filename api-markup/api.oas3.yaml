openapi: 3.0.0
info:
  title: Housing Inventory
  version: 1.0.0
servers:
  - url: 'https://www.hmislynk.com/housinginventory/rest'
paths:
  /housing-units:
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - links
                  - content
                  - page
                example:
                  links:
                    - rel: first
                      href: >-
                        https://www.hmislynk.com/inventory-api/rest/housing-units/?page=0&size=2
                    - rel: self
                      href: >-
                        https://www.hmislynk.com/inventory-api/rest/housing-units/?page=0&size=2
                    - rel: next
                      href: >-
                        https://www.hmislynk.com/inventory-api/rest/housing-units/?page=1&size=2
                    - rel: last
                      href: >-
                        https://www.hmislynk.com/inventory-api/rest/housing-units/?page=20&size=2
                  content:
                    - inactive: false
                      housingInventoryId: 7a428e4e-d682-43ef-b2c7-383340ceb84e
                      bedsCurrent: 5
                      projectId: test-project
                      userId: shubas
                      bedsCapacity: 6
                      familyUnit: false
                      inService: false
                      vacant: false
                      aliasName: Test Name
                      links: []
                    - inactive: false
                      housingInventoryId: 0144dd7c-a2df-4dec-8f57-a7afe45336c4
                      bedsCurrent: 8
                      projectId: test-project
                      userId: shubas
                      bedsCapacity: 6
                      familyUnit: false
                      inService: false
                      vacant: false
                      aliasName: Test2 Name
                      links: []
                  page:
                    size: 2
                    totalElements: 42
                    totalPages: 21
                    number: 0
                type: object
                properties:
                  links:
                    type: array
                    items:
                      required:
                        - rel
                        - href
                      type: object
                      properties:
                        rel:
                          type: string
                        href:
                          type: string
                  content:
                    type: array
                    items:
                      required:
                        - inactive
                        - housingInventoryId
                        - bedsCurrent
                        - projectId
                        - userId
                        - bedsCapacity
                        - familyUnit
                        - inService
                        - vacant
                        - links
                      type: object
                      properties:
                        inactive:
                          type: boolean
                        housingInventoryId:
                          type: string
                        bedsCurrent:
                          type: integer
                        projectId:
                          type: string
                        userId:
                          type: string
                        bedsCapacity:
                          type: integer
                        familyUnit:
                          type: boolean
                        inService:
                          type: boolean
                        vacant:
                          type: boolean
                        aliasName:
                          type: string
                        links:
                          type: array
                          items:
                            required:
                              - rel
                              - href
                            type: object
                            properties:
                              rel:
                                type: string
                              href:
                                type: string
                  page:
                    required:
                      - size
                      - totalElements
                      - totalPages
                      - number
                    type: object
                    properties:
                      size:
                        type: integer
                      totalElements:
                        type: integer
                      totalPages:
                        type: integer
                      number:
                        type: integer
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  errorMessage: no housing inventory related to project id.
      description: gets housing units
      operationId: GET_housing-units
      parameters:
        - name: userId
          in: query
          description: Filter the list of housing units by userId.
          schema:
            type: string
        - name: projectId
          in: query
          description: Filter the list of housing units by projectId.
          schema:
            type: string
        - name: vacant
          in: query
          description: Filter the list of housing units by vacant status.
          schema:
            type: boolean
        - name: inactive
          in: query
          description: Filter the list of housing units by inactive status.
          schema:
            type: boolean
        - name: size
          in: query
          description: Number of records in response.
          schema:
            default: 30
            type: integer
        - name: page
          in: query
          description: Page number
          schema:
            default: 0
            type: integer
    post:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  - inactive: false
                    housingInventoryId: b7557434-6d2c-43c5-a002-665b95deaed8
                    bedsCurrent: 5
                    projectId: b7557435-6d2c-43c5-a002-665b95deaed8
                    dateCreated: '10-25-2016 15:24'
                    dateUpdated: '10-25-2016 15:24'
                    userId: 74fe590d-9389-4936-abef-1c18fbf14750
                    bedsCapacity: 6
                    familyUnit: false
                    inService: true
                    vacant: true
                    aliasName: Test Name
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      description: saves the multiple housing inventory.
      operationId: POST_housing-units
      requestBody:
        content:
          application/json:
            example:
              - bedsCurrent: 5
                projectId: b7557435-6d2c-43c5-a002-665b95deaed8
                bedsCapacity: 6
                familyUnit: false
                aliasName: Test Name
            schema:
              $ref: "#/components/schemas/housing-unit"
        required: true
    put:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Historical house unit data is updated in inventory
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      description: updates the housing inventory record.
      operationId: PUT_housing-units
      requestBody:
        content:
          application/json:
            example:
              - inactive: false
                housingInventoryId: b7557434-6d2c-43c5-a002-665b95deaed8
                bedsCurrent: 5
                projectId: b7557445-6d2c-43c5-a002-665b95deaed8
                userId: shubas
                bedsCapacity: 8
                familyUnit: false
                inService: false
                vacant: false
                aliasName: Test Name
            schema:
              type: array
              items:
                required:
                  - inactive
                  - housingInventoryId
                  - bedsCurrent
                  - projectId
                  - userId
                  - bedsCapacity
                  - familyUnit
                  - inService
                  - vacant
                  - aliasName
                type: object
                properties:
                  inactive:
                    type: boolean
                  housingInventoryId:
                    type: string
                  bedsCurrent:
                    type: integer
                  projectId:
                    type: string
                  userId:
                    type: string
                  bedsCapacity:
                    type: integer
                  familyUnit:
                    type: boolean
                  inService:
                    type: boolean
                  vacant:
                    type: boolean
                  aliasName:
                    type: string
        required: true
  '/housing-units/{housing_unit_uuid}':
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  - inactive: false
                    housingInventoryId: 620ef25c-c9db-41fd-b799-fc3691f0d3b4
                    bedsCurrent: 2
                    projectId: 3189abda-32bd-4330-8839-8c6f723f1e73
                    userId: 620ef25c-c9db-41fd-b799-fc3691f0d3b4
                    bedsCapacity: 5
                    familyUnit: false
                    inService: false
                    vacant: false
                    aliasName: test name
                    schemaYear: 2014
                    links:
                      - rel: project
                        href: >-
                          /hmis-clientapi/rest/v2014/projects/3189abda-32bd-4330-8839-8c6f723f1e73
                type: array
                items:
                  required:
                    - inactive
                    - housingInventoryId
                    - bedsCurrent
                    - projectId
                    - userId
                    - bedsCapacity
                    - familyUnit
                    - inService
                    - vacant
                    - aliasName
                  type: object
                  properties:
                    inactive:
                      type: boolean
                    housingInventoryId:
                      type: string
                    bedsCurrent:
                      type: integer
                    projectId:
                      type: string
                    userId:
                      type: string
                    bedsCapacity:
                      type: integer
                    familyUnit:
                      type: boolean
                    inService:
                      type: boolean
                    vacant:
                      type: boolean
                    aliasName:
                      type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  errorMessage: Housing unit not found.
      description: retrieves inventory  details.
      operationId: GET_housing-units-housing_unit_uuid
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: inventory successfully deleted
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Internal Server Error - retry request'
      description: to delete housing inventory on the basis of uuid
      operationId: DELETE_housing-units-housing_unit_uuid
    put:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: inventory successfully updated
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Internal Server Error - retry request'
      description: for updating housing inventory.
      operationId: PUT_housing-units-housing_unit_uuid
      requestBody:
        content:
          application/json:
            example:
              - inactive: false
                housingInventoryId: b7557434-6d2c-43c5-a002-665b95deaed8
                bedsCurrent: 5
                projectId: b7557445-6d2c-43c5-a002-665b95deaed8
                userId: shubas
                bedsCapacity: 8
                familyUnit: false
                inService: false
                vacant: false
                aliasName: Test Name
            schema:
              type: array
              items:
                required:
                  - inactive
                  - housingInventoryId
                  - bedsCurrent
                  - projectId
                  - userId
                  - bedsCapacity
                  - familyUnit
                  - inService
                  - vacant
                  - aliasName
                type: object
                properties:
                  inactive:
                    type: boolean
                  housingInventoryId:
                    type: string
                  bedsCurrent:
                    type: integer
                  projectId:
                    type: string
                  userId:
                    type: string
                  bedsCapacity:
                    type: integer
                  familyUnit:
                    type: boolean
                  inService:
                    type: boolean
                  vacant:
                    type: boolean
                  aliasName:
                    type: string
        required: true
    parameters:
      - name: housing_unit_uuid
        in: path
        required: true
        schema:
          type: string
  '/housing-units/{housing_unit_uuid}/addresses':
    put:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: 'address is updated '
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      operationId: PUT_housing-units-housing_unit_uuid-addresses
      requestBody:
        content:
          application/json:
            example:
              dateCreated: 03-03-2016
              dateUpdated: 03-03-2016
              inactive: false
              addressId: 620ef25c-c9db-41fd-b799-fc3691f0d3b4
              city: Austin
              line1: test1
              line2: test2
              state: NY
              zipCode: 123
              housingInventoryId: 620ef25c-c9db-41fd-b799-fc3691f0d3b4
            schema:
              required:
                - dateCreated
                - dateUpdated
                - inactive
                - addressId
                - line1
                - line2
                - state
                - city
                - zipCode
                - housingInventoryId
              type: object
              properties:
                dateCreated:
                  type: string
                dateUpdated:
                  type: string
                inactive:
                  type: boolean
                addressId:
                  type: string
                line1:
                  type: string
                line2:
                  type: string
                state:
                  type: string
                city:
                  type: string
                zipCode:
                  type: integer
                housingInventoryId:
                  type: string
        required: true
    post:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: 'address is updated '
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      operationId: POST_housing-units-housing_unit_uuid-addresses
      requestBody:
        content:
          application/json:
            example:
              inactive: false
              city: Austin
              line1: test1
              line2: test2
              state: NY
              zipCode: 123
            schema: 
                {
                  "type": "object",
                  "properties": {
                    "inactive": {
                      "type": "boolean"
                    },
                    "city": {
                      "type": "string"
                    },
                    "line1": {
                      "type": "string"
                    },
                    "line2": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zipCode": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "inactive",
                    "city",
                    "line1",
                    "line2",
                    "state",
                    "zipCode"
                  ]
                }
        required: true
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              example:
                links:
                  - rel: first
                    href: >-
                      https://www.hmislynk.com/inventory-api/rest/housing-units/7a428e4e-d682-43ef-b2c7-383340ceb84e/addresses?page=0&size=3
                  - rel: self
                    href: >-
                      https://www.hmislynk.com/inventory-api/rest/housing-units/7a428e4e-d682-43ef-b2c7-383340ceb84e/addresses?size=3
                  - rel: next
                    href: >-
                      https://www.hmislynk.com/inventory-api/rest/housing-units/7a428e4e-d682-43ef-b2c7-383340ceb84e/addresses?page=1&size=3
                  - rel: last
                    href: >-
                      https://www.hmislynk.com/inventory-api/rest/housing-units/7a428e4e-d682-43ef-b2c7-383340ceb84e/addresses?page=2&size=3
                content:
                  - inactive: false
                    addressId: a38af2cc-fa1f-4b6e-bb96-dbc34d0a5d8b
                    line1: test1
                    line2: test2
                    state: NY
                    city: Austin
                    zipCode: 123
                    housingInventory:
                      inactive: false
                      housingInventoryId: 7a428e4e-d682-43ef-b2c7-383340ceb84e
                      bedsCurrent: 5
                      projectId: test-project
                      userId: shubas
                      bedsCapacity: 6
                      familyUnit: false
                      inService: false
                      vacant: false
                    links: []
                  - inactive: false
                    addressId: a38af2cc-fa1f-4b6e-bb96-dbc34d0a5d8b
                    line1: test1
                    line2: test2
                    state: NY
                    city: Austin
                    zipCode: 123
                    housingInventory:
                      inactive: false
                      housingInventoryId: 7a428e4e-d682-43ef-b2c7-383340ceb84e
                      bedsCurrent: 5
                      projectId: test-project
                      userId: shubas
                      bedsCapacity: 6
                      familyUnit: false
                      inService: false
                      vacant: false
                    links: []
                  - inactive: false
                    addressId: a38af2cc-fa1f-4b6e-bb96-dbc34d0a5d8b
                    line1: test1
                    line2: test2
                    state: NY
                    city: Austin
                    zipCode: 123
                    housingInventory:
                      inactive: false
                      housingInventoryId: 7a428e4e-d682-43ef-b2c7-383340ceb84e
                      bedsCurrent: 5
                      projectId: test-project
                      userId: shubas
                      bedsCapacity: 6
                      familyUnit: false
                      inService: false
                      vacant: false
                    links: []
                page:
                  size: 3
                  totalElements: 8
                  totalPages: 3
                  number: 0
              schema:
                  {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rel": {
                              "type": "string"
                            },
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "rel",
                            "href"
                          ]
                        }
                      },
                      "content": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "inactive": {
                              "type": "boolean"
                            },
                            "addressId": {
                              "type": "string"
                            },
                            "line1": {
                              "type": "string"
                            },
                            "line2": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "city": {
                              "type": "string"
                            },
                            "zipCode": {
                              "type": "integer"
                            },
                            "housingInventory": {
                              "type": "object",
                              "properties": {
                                "inactive": {
                                  "type": "boolean"
                                },
                                "housingInventoryId": {
                                  "type": "string"
                                },
                                "bedsCurrent": {
                                  "type": "integer"
                                },
                                "projectId": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                },
                                "bedsCapacity": {
                                  "type": "integer"
                                },
                                "familyUnit": {
                                  "type": "boolean"
                                },
                                "inService": {
                                  "type": "boolean"
                                },
                                "vacant": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "inactive",
                                "housingInventoryId",
                                "bedsCurrent",
                                "projectId",
                                "userId",
                                "bedsCapacity",
                                "familyUnit",
                                "inService",
                                "vacant"
                              ]
                            },
                            "links": {
                              "type": "array",
                              "items": {}
                            }
                          },
                          "required": [
                            "inactive",
                            "addressId",
                            "line1",
                            "line2",
                            "state",
                            "city",
                            "zipCode",
                            "housingInventory",
                            "links"
                          ]
                        }
                      },
                      "page": {
                        "type": "object",
                        "properties": {
                          "size": {
                            "type": "integer"
                          },
                          "totalElements": {
                            "type": "integer"
                          },
                          "totalPages": {
                            "type": "integer"
                          },
                          "number": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "size",
                          "totalElements",
                          "totalPages",
                          "number"
                        ]
                      }
                    },
                    "required": [
                      "links",
                      "content",
                      "page"
                    ]
                  }
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      operationId: GET_housing-units-housing_unit_uuid-addresses
      parameters:
        - name: size
          in: query
          description: Number of records in response.
          schema:
            default: 30
            type: integer
        - name: page
          in: query
          description: Page number
          schema:
            default: 0
            type: integer
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: 'Success '
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      operationId: DELETE_housing-units-housing_unit_uuid-addresses
    parameters:
      - name: housing_unit_uuid
        in: path
        required: true
        schema:
          type: string
  '/housing-units/{housing_unit_uuid}/addresses/{id}':
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - dateCreated
                  - dateUpdated
                  - inactive
                  - addressId
                  - line1
                  - line2
                  - state
                  - city
                  - zipCode
                  - housingInventoryId
                example:
                  dateCreated: 03-03-2016
                  dateUpdated: 03-03-2016
                  inactive: false
                  addressId: 620ef25c-c9db-41fd-b799-fc3691f0d3b4
                  city: Austin
                  line1: test1
                  line2: test2
                  state: NY
                  zipCode: 123
                  housingInventoryId: 620ef25c-c9db-41fd-b799-fc3691f0d3b4
                type: object
                properties:
                  dateCreated:
                    type: string
                  dateUpdated:
                    type: string
                  inactive:
                    type: boolean
                  addressId:
                    type: string
                  line1:
                    type: string
                  line2:
                    type: string
                  state:
                    type: string
                  city:
                    type: string
                  zipCode:
                    type: integer
                  housingInventoryId:
                    type: string
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      description: will get he data based on address_id.
      operationId: GET_housing-units-housing_unit_uuid-addresses-id
    put:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Assignments successfully saved.
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      description: will update the address data.
      operationId: PUT_housing-units-housing_unit_uuid-addresses-id
      requestBody:
        content:
          application/json:
            example:
              dateCreated: 03-03-2016
              dateUpdated: 03-03-2016
              inactive: false
              addressId: 620ef25c-c9db-41fd-b799-fc3691f0d3b4
              city: Austin
              line1: test1
              line2: test2
              state: NY
              zipCode: 123
              housingInventoryId: 620ef25c-c9db-41fd-b799-fc3691f0d3b4
            schema:
              required:
                - dateCreated
                - dateUpdated
                - inactive
                - addressId
                - line1
                - line2
                - state
                - city
                - zipCode
                - housingInventoryId
              type: object
              properties:
                dateCreated:
                  type: string
                dateUpdated:
                  type: string
                inactive:
                  type: boolean
                addressId:
                  type: string
                line1:
                  type: string
                line2:
                  type: string
                state:
                  type: string
                city:
                  type: string
                zipCode:
                  type: integer
                housingInventoryId:
                  type: string
        required: true
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: address deleted successfully.
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      description: delete the record based on address_id.
      operationId: DELETE_housing-units-housing_unit_uuid-addresses-id
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: housing_unit_uuid
        in: path
        required: true
        schema:
          type: string
  '/housing-units/{housing_unit_uuid}/assignments':
    post:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Assignments successfully saved.
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      description: saves the multiple  assignment record.
      operationId: POST_housing-units-housing_unit_uuid-assignments
      requestBody:
        content:
          application/json:
            example:
              - dateCreated: 03-03-2016
                dateUpdated: 03-03-2016
                inactive: false
                assignmentId: 936a11e4-12e6-4f36-ab3d-3ae9480d221d
                clientId: abc-86adsf
                householdId: add-adf
                checkoutDate: 04-21-2016
                housingInventoryId: 836a11e4-12e6-4f36-ab3d-3ae9480d221d
            schema:
              type: array
              items:
                required:
                  - dateCreated
                  - dateUpdated
                  - inactive
                  - assignmentId
                  - clientId
                  - householdId
                  - checkoutDate
                  - housingInventoryId
                type: object
                properties:
                  dateCreated:
                    type: string
                  dateUpdated:
                    type: string
                  inactive:
                    type: boolean
                  assignmentId:
                    type: string
                  clientId:
                    type: string
                  householdId:
                    type: string
                  checkoutDate:
                    type: string
                  housingInventoryId:
                    type: string
        required: true
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - links
                  - content
                  - page
                example:
                  links:
                    - rel: first
                      href: >-
                        https://www.hmislynk.com/inventory-api/rest/housing-units/7a428e4e-d682-43ef-b2c7-383340ceb84e/assignments?page=0&size=3
                    - rel: self
                      href: >-
                        https://www.hmislynk.com/inventory-api/rest/housing-units/7a428e4e-d682-43ef-b2c7-383340ceb84e/assignments?size=3
                    - rel: next
                      href: >-
                        https://www.hmislynk.com/inventory-api/rest/housing-units/7a428e4e-d682-43ef-b2c7-383340ceb84e/assignments?page=1&size=3
                    - rel: last
                      href: >-
                        https://www.hmislynk.com/inventory-api/rest/housing-units/7a428e4e-d682-43ef-b2c7-383340ceb84e/assignments?page=2&size=3
                  content:
                    - inactive: false
                      assignmentId: 75d14bfe-405c-4d29-ae12-6c72243855a7
                      clientId: xyz
                      links: []
                    - inactive: false
                      assignmentId: bfed0675-3dbe-448b-8358-c8459415deee
                      clientId: xyz
                      links: []
                    - inactive: false
                      assignmentId: d2a77c3f-51fd-4ee4-ac9c-07589d607e18
                      clientId: xyz
                      links: []
                  page:
                    size: 3
                    totalElements: 8
                    totalPages: 3
                    number: 0
                type: object
                properties:
                  links:
                    type: array
                    items:
                      required:
                        - rel
                        - href
                      type: object
                      properties:
                        rel:
                          type: string
                        href:
                          type: string
                  content:
                    type: array
                    items:
                      required:
                        - inactive
                        - assignmentId
                        - clientId
                        - links
                      type: object
                      properties:
                        inactive:
                          type: boolean
                        assignmentId:
                          type: string
                        clientId:
                          type: string
                        links:
                          type: array
                          items:
                            type: string
                  page:
                    required:
                      - size
                      - totalElements
                      - totalPages
                      - number
                    type: object
                    properties:
                      size:
                        type: integer
                      totalElements:
                        type: integer
                      totalPages:
                        type: integer
                      number:
                        type: integer
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  errorMessage: Assignments not found.
      description: retrieve all the assignment based on query params.
      operationId: GET_housing-units-housing_unit_uuid-assignments
      parameters:
        - name: client_id
          in: query
          description: Filter the list of assignments by client_id.
          schema:
            type: string
        - name: household_id
          in: query
          description: Filter the list of assignment by household_id.
          schema:
            type: string
        - name: inactive
          in: query
          description: Filter the list of assignments by inactive status.
          schema:
            type: boolean
        - name: size
          in: query
          description: Number of records in response.
          schema:
            default: 30
            type: integer
        - name: page
          in: query
          description: Page number
          schema:
            default: 0
            type: integer
    put:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Assignments successfully updated.
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      description: will update the assignments.
      operationId: PUT_housing-units-housing_unit_uuid-assignments
      requestBody:
        content:
          application/json:
            example:
              - dateCreated: 03-03-2016
                dateUpdated: 03-03-2016
                inactive: false
                assignmentId: 936a11e4-12e6-4f36-ab3d-3ae9480d221d
                clientId: abc-86adsf
                householdId: add-adf
                checkoutDate: 04-21-2016
                housingInventoryId: 836a11e4-12e6-4f36-ab3d-3ae9480d221d
            schema:
              type: array
              items:
                required:
                  - dateCreated
                  - dateUpdated
                  - inactive
                  - assignmentId
                  - clientId
                  - householdId
                  - checkoutDate
                  - housingInventoryId
                type: object
                properties:
                  dateCreated:
                    type: string
                  dateUpdated:
                    type: string
                  inactive:
                    type: boolean
                  assignmentId:
                    type: string
                  clientId:
                    type: string
                  householdId:
                    type: string
                  checkoutDate:
                    type: string
                  housingInventoryId:
                    type: string
        required: true
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Assignments successfully deleted.
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      description: saves the multiple assignment records.
      operationId: DELETE_housing-units-housing_unit_uuid-assignments
    parameters:
      - name: housing_unit_uuid
        in: path
        required: true
        schema:
          type: string
  '/housing-units/{housing_unit_uuid}/assignments/{id}':
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  $schema: 'http://json-schema.org/draft-04/schema#'
                  type: object
                  properties:
                    dateCreated:
                      type: string
                    dateUpdated:
                      type: string
                    inactive:
                      type: boolean
                    assignmentId:
                      type: string
                    clientId:
                      type: string
                    householdId:
                      type: string
                    checkoutDate:
                      type: string
                    housingInventoryId:
                      type: string
                  required:
                    - dateCreated
                    - dateUpdated
                    - inactive
                    - assignmentId
                    - clientId
                    - householdId
                    - checkoutDate
                    - housingInventoryId
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      description: get the assignment record based on assignment_id.
      operationId: GET_housing-units-housing_unit_uuid-assignments-id
    put:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Assignments successfully updated.
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      description: update the assignment record.
      operationId: PUT_housing-units-housing_unit_uuid-assignments-id
      requestBody:
        content:
          application/json:
            example:
              dateCreated: 03-03-2016
              dateUpdated: 03-03-2016
              inactive: false
              assignmentId: 936a11e4-12e6-4f36-ab3d-3ae9480d221d
              clientId: abc-86adsf
              householdId: add-adf
              checkoutDate: 03-03-2016
              housingInventoryId: 8e656b38-4465-4e27-ab89-6dedf28890b0
            schema:
              required:
                - dateCreated
                - dateUpdated
                - inactive
                - assignmentId
                - clientId
                - householdId
                - checkoutDate
                - housingInventoryId
              type: object
              properties:
                dateCreated:
                  type: string
                dateUpdated:
                  type: string
                inactive:
                  type: boolean
                assignmentId:
                  type: string
                clientId:
                  type: string
                householdId:
                  type: string
                checkoutDate:
                  type: string
                housingInventoryId:
                  type: string
        required: true
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Assignments deleted successfully.
        '401':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: ' Unauthorized'
        '500':
          description: ''
          content:
            application/json:
              schema:
                example:
                  message: Resource not found
      description: delete the assignment.
      operationId: DELETE_housing-units-housing_unit_uuid-assignments-id
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: housing_unit_uuid
        in: path
        required: true
        schema:
          type: string
  '/projects/{projectid}/eligibilityrequirements':
    post:
      responses:
        '200':
          description: ''
          content:
            application/json:
              example:
                eligibilityRequirementId: f580935c-01e0-4d51-9b8d-7590bf204058
                requirements:
                  - name: servesSingles
                    value: ' != true'
                  - name: servesHouseholdWithChildren
                    value: ' == false'
                  - name: incomeRequirement
                    value: ' > 9 & <20'
                  - name: gender
                    value: '== 1 || == 3 '
                  - name: income
                    value: ' >10 || < 50'
                  - name: zipCode
                    value: = 50050 && = 50532
                  - name: monthsHomelessPastThreeYears
                    value: ' ( == 3 || ==4) && ( > 5 )'
                  - name: type
                    value: ' == "sick"'
              schema:
                  {
                    "type": "object",
                    "properties": {
                      "requirements": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "value"
                          ]
                        }
                      }
                    },
                    "required": [
                      "requirements"
                    ]
                  }
        '400':
          description: ''
          content:
            application/json:
              example:
                error:
                  - message: Minimum Income must be greater than or equal to 0
                  - message: Maximum Age must be greater than 0
              schema:
                  {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      }
                    },
                    "required": [
                      "error"
                    ]
                  }
      description: |
        To create an eligibility requirment.
        The following operators can be used for "value" field.
          1) Relational operators : equal (==, =), not equal (!=), less than (<), less than or equal (<= ), greater than (>), and greater than or equal (>=).
          2) Logical operators : and (&&,&), or(||).
      operationId: POST_projects-projectid-eligibilityrequirements
      requestBody:
        content:
          application/json:
            example:
              requirements:
                - name: servesSingles
                  value: ' != true'
                - name: servesHouseholdWithChildren
                  value: ' == false'
                - name: incomeRequirement
                  value: ' > 9 & <20'
                - name: gender
                  value: '== 1 || == 3 '
                - name: income
                  value: ' >10 || < 50'
                - name: zipCode
                  value: = 50050 && = 50532
                - name: type
                  value: ' == "sick"'
                - name: monthsHomelessPastThreeYears
                  value: ' ( == 3 || ==4) && ( > 5 )'
                - name: residencePrior
                  value: ==1
            schema:
                {
                  "type": "object",
                  "properties": {
                    "servesSingles": {
                      "type": "boolean"
                    },
                    "servesHouseholdWithChildren": {
                      "type": "boolean"
                    },
                    "incomeRequirement": {
                      "type": "boolean"
                    },
                    "alcoholAbuse": {
                      "type": "boolean"
                    },
                    "bothAlcoholAndDrugAbuse": {
                      "type": "boolean"
                    },
                    "chronicHealthCondition": {
                      "type": "boolean"
                    },
                    "developmental": {
                      "type": "boolean"
                    },
                    "drugAbuse": {
                      "type": "boolean"
                    },
                    "mentalHealthProblem": {
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string"
                    },
                    "gender": {
                      "type": "integer"
                    },
                    "minAge": {
                      "type": "integer"
                    },
                    "maxAge": {
                      "type": "integer"
                    },
                    "minimumIncome": {
                      "type": "integer"
                    },
                    "maximumIncome": {
                      "type": "integer"
                    },
                    "zipCode": {
                      "type": "string"
                    },
                    "disability": {
                      "type": "string"
                    },
                    "chronicallyHomeless": {
                      "type": "string"
                    },
                    "race": {
                      "type": "string"
                    },
                    "ethnicity": {
                      "type": "string"
                    },
                    "veteranStatus": {
                      "type": "string"
                    },
                    "housingStatus": {
                      "type": "string"
                    },
                    "monthsHomelessPastThreeYears": {
                      "type": "string"
                    },
                    "residencePrior": {
                      "type": "string"
                    }
                  }
                }
        required: true
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              example:
                links:
                  - rel: self
                    href: >-
                      http://localhost:8080/inventory-api/projects/893ecb78-84be-11e6-ae22-56b6b6499611/eligibilityrequirements
                content:
                  - eligibilityRequirementId: 0effc53e-cd9a-48b1-af22-e90b7d860e77
                    projectId: 893ecb78-84be-11e6-ae22-56b6b6499611
                    requirements:
                      - name: servesSingles
                        value: ' != true'
                      - name: servesHouseholdWithChildren
                        value: ' == false'
                      - name: incomeRequirement
                        value: ' > 9 & <20'
                      - name: gender
                        value: '== 1 or == 3 '
                      - name: income
                        value: ' >10 || < 50'
                      - name: zipCode
                        value: = 50050 and = 50532
                      - name: monthsHomelessPastThreeYears
                        value: ' ( == 3 || ==4) && ( > 5 )'
                      - name: type
                        value: ' == "sick"'
                    links: []
                page:
                  size: 20
                  totalElements: 1
                  totalPages: 1
                  number: 0
              schema:
                  {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rel": {
                              "type": "string"
                            },
                            "href": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "rel",
                            "href"
                          ]
                        }
                      },
                      "content": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "gender": {
                              "type": "string"
                            },
                            "servesSingles": {
                              "type": "boolean"
                            },
                            "servesHouseholdWithChildren": {
                              "type": "boolean"
                            },
                            "minAge": {
                              "type": "integer"
                            },
                            "maxAge": {
                              "type": "integer"
                            },
                            "incomeRequirement": {
                              "type": "boolean"
                            },
                            "minimumIncome": {
                              "type": "integer"
                            },
                            "maximumIncome": {
                              "type": "integer"
                            },
                            "zipCode": {
                              "type": "string"
                            },
                            "disability": {
                              "type": "string"
                            },
                            "alcoholAbuse": {
                              "type": "boolean"
                            },
                            "bothAlcoholAndDrugAbuse": {
                              "type": "boolean"
                            },
                            "chronicHealthCondition": {
                              "type": "boolean"
                            },
                            "developmental": {
                              "type": "boolean"
                            },
                            "drugAbuse": {
                              "type": "boolean"
                            },
                            "mentalHealthProblem": {
                              "type": "boolean"
                            },
                            "chronicallyHomeless": {
                              "type": "string"
                            },
                            "race": {
                              "type": "string"
                            },
                            "ethnicity": {
                              "type": "string"
                            },
                            "veteranStatus": {
                              "type": "string"
                            },
                            "housingStatus": {
                              "type": "string"
                            },
                            "monthsHomelessPastThreeYears": {
                              "type": "string"
                            },
                            "residencePrior": {
                              "type": "string"
                            },
                            "links": {
                              "type": "array",
                              "items": {}
                            }
                          },
                          "required": [
                            "links"
                          ]
                        }
                      },
                      "page": {
                        "type": "object",
                        "properties": {
                          "size": {
                            "type": "integer"
                          },
                          "totalElements": {
                            "type": "integer"
                          },
                          "totalPages": {
                            "type": "integer"
                          },
                          "number": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "size",
                          "totalElements",
                          "totalPages",
                          "number"
                        ]
                      }
                    },
                    "required": [
                      "links",
                      "content",
                      "page"
                    ]
                  }
      description: |
        To retrive eligibility requirements of a project.
      operationId: GET_projects-projectid-eligibilityrequirements
      parameters:
        - name: size
          in: query
          description: Number of records in response.
          schema:
            default: 30
            type: integer
        - name: page
          in: query
          description: Page number
          schema:
            default: 0
            type: integer
    parameters:
      - name: projectid
        in: path
        required: true
        schema:
          type: string
  '/projects/{projectid}/eligibilityrequirements/{requirementid}':
    put:
      responses:
        '200':
          description: ''
      description: |
        To update existing eligibility requirment
      operationId: PUT_projects-projectid-eligibilityrequirements-requirementid
      requestBody:
        content:
          application/json:
            example:
              requirements:
                - name: servesSingles
                  value: ' != true'
                - name: servesHouseholdWithChildren
                  value: ' == false'
                - name: incomeRequirement
                  value: ' > 9 & < 20'
                - name: gender
                  value: ' == 1 or == 3 '
                - name: income
                  value: ' > 10 || < 50'
                - name: zipCode
                  value: ' == 50050 and == 50532'
                - name: monthsHomelessPastThreeYears
                  value: ' ( == 3 || == 4) && ( > 5 )'
                - name: type
                  value: ' == "sick"'
            schema:
                {
                  "type": "object",
                  "properties": {
                    "requirements": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "requirements"
                  ]
                }
        required: true
    delete:
      responses:
        '200':
          description: ''
      description: |
        To delete an eligibility requirement.
      operationId: DELETE_projects-projectid-eligibilityrequirements-requirementid
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              example:
                eligibilityRequirementId: 0effc53e-cd9a-48b1-af22-e90b7d860e77
                projectId: 893ecb78-84be-11e6-ae22-56b6b6499611
                requirements:
                  - name: servesSingles
                    value: ' != true'
                  - name: servesHouseholdWithChildren
                    value: ' == false'
                  - name: incomeRequirement
                    value: ' > 9 & <20'
                  - name: gender
                    value: '== 1 or == 3 '
                  - name: income
                    value: ' >10 || < 50'
                  - name: zipCode
                    value: = 50050 and = 50532
                  - name: monthsHomelessPastThreeYears
                    value: ' ( == 3 || ==4) && ( > 5 )'
                  - name: type
                    value: ' == "sick"'
              schema:
                    {
                      "type": "object",
                      "properties": {
                        "eligibilityRequirementId": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "servesSingles": {
                          "type": "boolean"
                        },
                        "servesHouseholdWithChildren": {
                          "type": "boolean"
                        },
                        "minAge": {
                          "type": "integer"
                        },
                        "maxAge": {
                          "type": "integer"
                        },
                        "incomeRequirement": {
                          "type": "boolean"
                        },
                        "minimumIncome": {
                          "type": "integer"
                        },
                        "maximumIncome": {
                          "type": "integer"
                        },
                        "zipCode": {
                          "type": "string"
                        },
                        "disability": {
                          "type": "string"
                        },
                        "alcoholAbuse": {
                          "type": "boolean"
                        },
                        "bothAlcoholAndDrugAbuse": {
                          "type": "boolean"
                        },
                        "chronicHealthCondition": {
                          "type": "boolean"
                        },
                        "developmental": {
                          "type": "boolean"
                        },
                        "drugAbuse": {
                          "type": "boolean"
                        },
                        "mentalHealthProblem": {
                          "type": "boolean"
                        },
                        "chronicallyHomeless": {
                          "type": "string"
                        },
                        "race": {
                          "type": "string"
                        },
                        "ethnicity": {
                          "type": "string"
                        },
                        "veteranStatus": {
                          "type": "string"
                        },
                        "housingStatus": {
                          "type": "string"
                        },
                        "monthsHomelessPastThreeYears": {
                          "type": "string"
                        },
                        "residencePrior": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "eligibilityRequirementId"
                      ]
                    }
      description: |
        To get selected eligibility requirement.
      operationId: GET_projects-projectid-eligibilityrequirements-requirementid
    parameters:
      - name: requirementid
        in: path
        required: true
        schema:
          type: string
      - name: projectid
        in: path
        required: true
        schema:
          type: string
components:
  schemas:
    housing-unit:
      type: array
      items:
        type: object
        properties:
          bedsCurrent:
            type: integer
          projectId:
            type: string
          bedsCapacity:
            type: integer
          familyUnit:
            type: boolean
          vacant:
            type: boolean
          aliasName:
            type: string
        required:
        - bedsCurrent
        - projectId
        - bedsCapacity
        - familyUnit
        - aliasName
    housing_inventory:
      type: array
      items:
        required:
          - inactive
          - housingInventoryId
          - bedsCurrent
          - projectId
          - userId
          - bedsCapacity
          - familyUnit
          - inService
          - vacant
          - aliasName
        type: object
        properties:
          inactive:
            type: boolean
          housingInventoryId:
            type: string
          bedsCurrent:
            type: integer
          projectId:
            type: string
          userId:
            type: string
          bedsCapacity:
            type: integer
          familyUnit:
            type: boolean
          inService:
            type: boolean
          vacant:
            type: boolean
          aliasName:
            type: string
    housing_inventories:
      required:
        - links
        - content
        - page
      type: object
      properties:
        links:
          type: array
          items:
            required:
              - rel
              - href
            type: object
            properties:
              rel:
                type: string
              href:
                type: string
        content:
          type: array
          items:
            required:
              - inactive
              - housingInventoryId
              - bedsCurrent
              - projectId
              - userId
              - bedsCapacity
              - familyUnit
              - inService
              - vacant
              - links
            type: object
            properties:
              inactive:
                type: boolean
              housingInventoryId:
                type: string
              bedsCurrent:
                type: integer
              projectId:
                type: string
              userId:
                type: string
              bedsCapacity:
                type: integer
              familyUnit:
                type: boolean
              inService:
                type: boolean
              vacant:
                type: boolean
              aliasName:
                type: string
              links:
                type: array
                items:
                  required:
                    - rel
                    - href
                  type: object
                  properties:
                    rel:
                      type: string
                    href:
                      type: string
        page:
          required:
            - size
            - totalElements
            - totalPages
            - number
          type: object
          properties:
            size:
              type: integer
            totalElements:
              type: integer
            totalPages:
              type: integer
            number:
              type: integer
    address:
      required:
        - dateCreated
        - dateUpdated
        - inactive
        - addressId
        - line1
        - line2
        - state
        - city
        - zipCode
        - housingInventoryId
      type: object
      properties:
        dateCreated:
          type: string
        dateUpdated:
          type: string
        inactive:
          type: boolean
        addressId:
          type: string
        line1:
          type: string
        line2:
          type: string
        state:
          type: string
        city:
          type: string
        zipCode:
          type: integer
        housingInventoryId:
          type: string
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    oauth_2_0:
      description: |
        The HMIS API supports OAuth 2.0 for authenticating all API requests.
      type: oauth2
      flows:
        password:
          tokenUrl: 'https://hmislynk.com/hmis-authorization-service/rest/token'
          scopes:
            user: ''
            administrator: ''
  links: {}
  callbacks: {}